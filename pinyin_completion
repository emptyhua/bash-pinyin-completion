#!/bin/bash
#参考:http://linuxtoy.org/archives/chsdir.html
#参考:/etc/bash_completion

#用于保存覆盖之前的函数
#from http://mivok.net/2009/09/20/bashfunctionoverride.html
_py_save_function() {
    command -v "$1" >/dev/null || return 1; # original function does not exist

    local ORIG_FUNC NEW_FUNC;
	ORIG_FUNC="$(declare -f "$1")";
	ORIG_FUNC="${ORIG_FUNC#"$1"}"; # remove the name from the function definition
	test -n "$ORIG_FUNC" || return 1; # original function does not exist

	NEW_FUNC="${2}${ORIG_FUNC}";
    eval "$NEW_FUNC";
}

#兼容旧版本的bash-completion
if test -z "$(typeset -f _compopt_o_filenames)";then

# This function turns on "-o filenames" behavior dynamically. It is present
# for bash < 4 reasons. See http://bugs.debian.org/272660#64 for info about
# the bash < 4 compgen hack.
_compopt_o_filenames()
{
    # We test for compopt availability first because directly invoking it on
    # bash < 4 at this point may cause terminal echo to be turned off for some
    # reason, see https://bugzilla.redhat.com/653669 for more info.
    type compopt &>/dev/null && compopt -o filenames 2>/dev/null || \
        compgen -f /non-existing-dir/ >/dev/null
}

fi

#中文补齐函数

_py_completion()
{
    local IFS=$'\t\n'
    local cur

#兼容旧版本的bash-completion
    test -z "$(typeset -f _get_comp_words_by_ref)" &&
    cur="$(_get_cword)" ||
        _get_comp_words_by_ref cur

    _expand || return 0

    local dname_real bname_real dname bname tmp tmp2 sep
    local -a rt

    if [[ "${cur:0:1}" == "'" ]]
    then
        #目录名部分
        dname="$(dirname -- "${cur:1}")";
        #文件名部分
        bname="$(basename -- "${cur:1}")";

        dname_real="$dname"
        bname_real="$bname"
    else
        #目录名部分
        dname="$(dirname -- "$cur")";
        #文件名部分
        bname="$(basename -- "$cur")";

        if [[ "${dname:0:1}" == "\"" ]]; then
            dname="${dname:1}"
        fi

        if [[ "${bname:0:1}" == "\"" ]]; then
            bname="${bname:1}"
        fi

        #eval 用于消除转义符 例如 \[ 将变成 [
        eval dname_real="$dname"
        eval bname_real="$bname"
    fi

    test -z "$bname_real" && return 0;

    if [[ "$dname" == "/" ]];then
        sep=""
    else
        sep="/"
    fi

    test ! -d "$dname_real" && return 0;
    cd -- "$dname_real" || return 1;

    if [[ "$1" == "-d" ]];then
        rt=(${rt[@]-} $(
        compgen -d|pinyinmatch -f -c -- "$bname_real"|grep -v "^0"|cut -c 3-|while read -r tmp;do
        printf '%s%s%s\n' "$dname_real" "$sep" "$tmp"
        done
        ))
    else
        rt=(${rt[@]-} $(
        compgen -f|pinyinmatch -f -c -- "$bname_real"|grep -v "^0"|cut -c 3-|while read -r tmp;do
        printf '%s%s%s\n' "$dname_real" "$sep" "$tmp"
        done
        ))
        [ ${#rt[@]} -ne 0 ] && _compopt_o_filenames
    fi

    cd "$OLDPWD" || return 1;

    COMPREPLY=( "${COMPREPLY[@]}" "${rt[@]}" )
}

if _py_save_function _comp_compgen_filedir _py_bak_filedir; then
    # _comp_compgen_filedir is a new function since bash-completion 2.12
    # https://github.com/scop/bash-completion/commit/6e8a1546bde205fd7064d9e578f35ec67e2c6840
    _comp_compgen_filedir()
    {
        _py_bak_filedir "${@}"
        _py_completion "${@}"
    }

elif _py_save_function _filedir _py_bak_filedir; then
    # _filedir is a deprecated function in bash-completion
    # But we keep this function in here for compatibility with the old version of bash-completion
    _filedir()
    {
        _py_bak_filedir "${@}"
        _py_completion "${@}"
    }
fi

if _py_save_function _filedir_xspec _py_bak_filedir_xspec; then
    _filedir_xspec ()
    {
        _py_bak_filedir_xspec "${@}"
        _py_completion "${@}"
    }
fi

unset -f _py_save_function

